# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Build Windows

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# https://github.com/GlistEngine/glistzbin-win64/releases/download/v.2.0.2/glistzbin-win64-2.0.2.zip
env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-2022

    steps:
    - uses: actions/checkout@v3

    - name: checkout submodule
      run: |
        git submodule update --init --recursive

      #working-directory: ${{github.workspace}}/glist/myglistapps/${{github.repository}}
    - name: Set path
      run: |
        Add-Content $env:GITHUB_PATH "D:/a/chesstacos/chesstacos/zbin/glistzbin-win64/clang64/bin"
        Add-Content $env:GITHUB_PATH "D:/a/chesstacos/chesstacos/zbin/glistzbin-win64/CMake/bin"

    - name: Clone GlistEngine
      uses: GuillaumeFalourd/clone-github-repo-action@v2.2
      with:
        depth: 1
        branch: 'main'
        owner: 'GlistEngine'
        repository: 'GlistEngine'

    - name: cd zbin
      run: |
        mkdir ${{github.workspace}}/zbin
        cd ${{github.workspace}}/zbin

    - name: Download zbin
      uses: suisei-cn/actions-download-file@v1
      id: glistzbin-win64  # Remember to give an ID if you need the output
      with:
        url: 'https://github.com/GlistEngine/glistzbin-win64/releases/download/v.2.0.2/glistzbin-win64-2.0.2.zip'
        target: ${{github.workspace}}/zbin

    - name: Extract zip
      run: |
        7z l "D:/a/chesstacos/chesstacos/zbin/glistzbin-win64-2.0.2.zip"
        7z x "D:/a/chesstacos/chesstacos/zbin/glistzbin-win64-2.0.2.zip" -o"D:/a/chesstacos/chesstacos/zbin"

    - name: List
      run: |
        cd ${{github.workspace}}
        tree /f

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B '${{github.workspace}}/build' -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DTOP_DIR='D:/a/chesstacos/chesstacos' -S .

    - name: Build
      # Build your program with the given configuration
      run: cmake --build '${{github.workspace}}/build' --config ${{env.BUILD_TYPE}}


